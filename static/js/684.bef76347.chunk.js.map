{"version":3,"file":"static/js/684.bef76347.chunk.js","mappings":"6MA6DA,UAtDqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAOXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,SAAS,4BAC5BC,MAAOJ,EAAAA,KAAaG,SAAS,8BAC7BE,SAAUL,EAAAA,KAAaG,SAAS,gCAGlC,OACE,4BACE,SAAC,IAAD,WACE,oDAEF,SAAC,KAAD,CACEG,cAAe,CACbJ,KAAM,GACNE,MAAO,GACPC,SAAU,IAEZE,iBAAkBR,EAClBS,SAvBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9Bb,EAASc,EAAAA,GAAAA,SAAwBF,IACjCC,KAcE,UASE,UAAC,KAAD,YACE,mBAAOE,QAAQ,OAAf,kBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOX,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,OAAOY,UAAU,UAGtC,sCAEE,SAAC,KAAD,CAAOD,KAAK,QAAQX,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,QAAQY,UAAU,UAGvC,yCAEE,SAAC,KAAD,CAAOD,KAAK,WAAWX,KAAK,cAC5B,SAAC,KAAD,CAAcA,KAAK,WAAWY,UAAU,UAG1C,mBAAQD,KAAK,SAAb","sources":["views/RegisterView.js"],"sourcesContent":["import * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n// import { authOperations } from 'store/auth/auth-operations';\nimport { Field, Form, Formik, ErrorMessage } from 'formik';\nimport { authOperations } from 'store/auth';\n\nconst RegisterView = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(authOperations.register(values));\n    resetForm();\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Please, enter your name.'),\n    email: yup.string().required('Please, enter your number.'),\n    password: yup.string().required('Please, enter your number.'),\n  });\n\n  return (\n    <div>\n      <Helmet>\n        <title>Registration page</title>\n      </Helmet>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <label htmlFor=\"name\">\n            Name\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"p\" />\n          </label>\n\n          <label>\n            Email\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"p\" />\n          </label>\n\n          <label>\n            Password\n            <Field type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"p\" />\n          </label>\n\n          <button type=\"submit\">Register</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterView;\n"],"names":["dispatch","useDispatch","schema","yup","shape","name","required","email","password","initialValues","validationSchema","onSubmit","values","resetForm","authOperations","htmlFor","type","component"],"sourceRoot":""}